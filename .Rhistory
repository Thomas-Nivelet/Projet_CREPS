"Stab. inf.", "Stab.sup.")
data_spider_BK = as.data.frame(data_spider_BK)
## BL
Mob_inf_BL = c(8,0,mean(donnees_creps$MOBINF[POLES=="BL"]))
Mob_sup_BL = c(4,0,mean(donnees_creps$MOBSUP[POLES=="BL"]))
Stab_inf_BL = c(6,0,mean(donnees_creps$STABINF[POLES=="BL"]))
Stab_sup_BL = c(2,0,mean(donnees_creps$STABSUP[POLES=="BL"]))
data_spider_BL <- cbind(Mob_inf_BL,Mob_sup_BL,Stab_inf_BL,Stab_sup_BL)
rownames(data_spider_BL) <- c("MAX", "MIN", "BL")
colnames(data_spider_BL) <- c("Mob. inf.", "Mob. sup.",
"Stab. inf.", "Stab.sup")
data_spider_BL = as.data.frame(data_spider_BL)
## NAT
Mob_inf_NAT = c(8,0,mean(donnees_creps$MOBINF[POLES=="S"]))
Mob_sup_NAT = c(4,0,mean(donnees_creps$MOBSUP[POLES=="S"]))
Stab_inf_NAT = c(6,0,mean(donnees_creps$STABINF[POLES=="S"]))
Stab_sup_NAT = c(2,0,mean(donnees_creps$STABSUP[POLES=="S"]))
data_spider_NAT <- cbind(Mob_inf_NAT,Mob_sup_NAT,Stab_inf_NAT,Stab_sup_NAT)
rownames(data_spider_NAT) <- c("MAX", "MIN", "S")
colnames(data_spider_NAT) <- c("Mob. inf.", "Mob. sup.",
"Stab. inf.", "Stab. sup.")
data_spider_NAT = as.data.frame(data_spider_NAT)
## NS
Mob_inf_NS = c(8,0,mean(donnees_creps$MOBINF[POLES=="SS"]))
Mob_sup_NS = c(4,0,mean(donnees_creps$MOBSUP[POLES=="SS"]))
Stab_inf_NS = c(6,0,mean(donnees_creps$STABINF[POLES=="SS"]))
Stab_sup_NS = c(2,0,mean(donnees_creps$STABSUP[POLES=="SS"]))
data_spider_NS <- cbind(Mob_inf_NS,Mob_sup_NS,Stab_inf_NS,Stab_sup_NS)
rownames(data_spider_NS) <- c("MAX", "MIN", "SS")
colnames(data_spider_NS) <- c("Mob. inf.", "Mob. sup.",
"Stab. inf.", "Stab. sup.")
data_spider_NS = as.data.frame(data_spider_NS)
# Préparation et affichage des graphiques
par(mfrow=c(1,2), mar = c(1, 0, 1, 0))
options(repr.plot.width = 15, repr.plot.height = 8)
radarchart(data_spider_AV,
axistype = 1,
pcol = "lightskyblue2", pfcol = scales::alpha("lightskyblue2", 0.5), plwd = 2, plty = 1,
cglcol = "grey", cglty = 1, cglwd = 0.8,
axislabcol = "grey",
vlcex = 0.6, vlabels = colnames(data_spider_AV),
caxislabels = NULL, title = "Scores moyens - Aviron"
)
radarchart(data_spider_BF,
axistype = 1,
pcol = "lightgoldenrod3", pfcol = scales::alpha("lightgoldenrod3", 0.5), plwd = 2, plty = 1,
cglcol = "grey", cglty = 1, cglwd = 0.8,
axislabcol = "grey",
vlcex = 0.6, vlabels = colnames(data_spider_BF),
caxislabels = NULL, title = "Scores moyens - Boxe française"
)
par(mfrow=c(1,2), mar = c(1, 2, 2, 1))
options(repr.plot.width = 20, repr.plot.height = 10)
radarchart(data_spider_BK,
axistype = 1,
pcol = "mistyrose4", pfcol = scales::alpha("mistyrose4", 0.5), plwd = 2, plty = 1,
cglcol = "grey", cglty = 1, cglwd = 0.8,
axislabcol = "grey",
vlcex = 0.7, vlabels = colnames(data_spider_BK),
caxislabels = NULL, title = "Scores moyens - Basketball"
)
radarchart(data_spider_BL,
axistype = 1,
pcol = "lightcoral", pfcol = scales::alpha("lightcoral", 0.5), plwd = 2, plty = 1,
cglcol = "grey", cglty = 1, cglwd = 0.8,
axislabcol = "grey",
vlcex = 0.7, vlabels = colnames(data_spider_BL),
caxislabels = NULL, title = "Scores moyens - Bowling"
)
par(mfrow=c(1,2), mar = c(1, 2, 2, 1))
options(repr.plot.width = 20, repr.plot.height = 10)
radarchart(data_spider_NAT,
axistype = 1,
pcol = "mediumblue", pfcol = scales::alpha("mediumblue", 0.5), plwd = 2, plty = 1,
cglcol = "grey", cglty = 1, cglwd = 0.8,
axislabcol = "grey",
vlcex = 0.7, vlabels = colnames(data_spider_NAT),
caxislabels = NULL, title = "Scores moyens - Natation"
)
radarchart(data_spider_NS,
axistype = 1,
pcol = "lightseagreen", pfcol = scales::alpha("lightseagreen", 0.5), plwd = 2, plty = 1,
cglcol = "grey", cglty = 1, cglwd = 0.8,
axislabcol = "grey",
vlcex = 0.7, vlabels = colnames(data_spider_NS),
caxislabels = NULL, title = "Scores moyens \n Natation synchronisée"
)
# Test graphes araignée superposés
## Récupération des données moyennes, minimales et maximales
Mob_inf = c(8,0,mean(donnees_creps$MOBINF[POLES=="RW"]),mean(donnees_creps$MOBINF[POLES=="FB"]),mean(donnees_creps$MOBINF[POLES=="BK"]),mean(donnees_creps$MOBINF[POLES=="BL"]),mean(donnees_creps$MOBINF[POLES=="S"]),mean(donnees_creps$MOBINF[POLES=="SS"]))
Mob_sup = c(4,0,mean(donnees_creps$MOBSUP[POLES=="RW"]),mean(donnees_creps$MOBSUP[POLES=="BF"]),mean(donnees_creps$MOBSUP[POLES=="BK"]),mean(donnees_creps$MOBSUP[POLES=="BL"]),mean(donnees_creps$MOBSUP[POLES=="S"]),mean(donnees_creps$MOBSUP[POLES=="SS"]))
Stab_inf = c(6,0,mean(donnees_creps$STABINF[POLES=="RW"]),mean(donnees_creps$STABINF[POLES=="BF"]),mean(donnees_creps$STABINF[POLES=="BK"]),mean(donnees_creps$STABINF[POLES=="BL"]),mean(donnees_creps$STABINF[POLES=="S"]),mean(donnees_creps$STABINF[POLES=="SS"]))
Stab_sup = c(2,0,mean(donnees_creps$STABSUP[POLES=="RW"]),mean(donnees_creps$STABSUP[POLES=="FB"]),mean(donnees_creps$STABSUP[POLES=="BK"]),mean(donnees_creps$STABSUP[POLES=="BL"]),mean(donnees_creps$STABSUP[POLES=="S"]),mean(donnees_creps$STABSUP[POLES=="SS"]))
data_spider <- cbind(Mob_inf,Mob_sup,Stab_inf,Stab_sup)
rownames(data_spider) <- c("MAX", "MIN", "RW", "FB", "BK", "BL", "S", "SS")
colnames(data_spider) <- c("Mob. inf.", "Mob. sup.",
"Stab. inf.", "Stab. sup.")
data_spider = as.data.frame(data_spider)
## Définition et affichage du radarchart
par(mar = c(1, 1, 1, 1))
radarchart(data_spider,
axistype = 1,
pcol = c("lightskyblue2", "lightgoldenrod3", "mistyrose4", "lightcoral", "mediumblue", "lightseagreen"),
plwd = 2, plty = 1,
cglcol = "grey", cglty = 1, cglwd = 0.4,
axislabcol = "grey",
vlcex = 0.7, vlabels = colnames(data_spider_NAT),
caxislabels = NULL, title = "Scores moyens par catégories d'exercices"
)
legend(
x = "right", legend = rownames(data_spider[-c(1,2),]), horiz = FALSE,
bty = "n", pch = 20 , col = c("lightskyblue2", "lightgoldenrod3", "mistyrose4", "lightcoral", "mediumblue", "lightseagreen"),
text.col = "black", cex = 1, pt.cex = 1.5
)
ao.score.pole = lm(SCORE ~ POLES, data = donnees_creps)
summary(ao.score.pole)
#Modèle d'anova pour chaque catégorie de sport
ao.score_mob_inf.pole = lm(donnees_creps$MOBINF ~ POLES, data = donnees_creps)
summary(ao.score_mob_inf.pole)
ao.score_mob_sup.pole = lm(donnees_creps$MOBSUP ~ POLES, data = donnees_creps)
summary(ao.score_mob_sup.pole)
ao.score_stab_inf.pole = lm(donnees_creps$STABINF ~ POLES, data = donnees_creps)
summary(ao.score_stab_inf.pole)
ao.score_stab_sup.pole = lm(donnees_creps$STABSUP ~ POLES, data = donnees_creps)
summary(ao.score_stab_sup.pole)
#Possible d'essayer de mettre en place des modèles additifs voire ajouter ds interactions pour voir si le $R^2$ est meilleur ?
#reg.mob_inf_stab_sup <- lm(donnees_creps$SCORE ~ MOBINF + STABSUP + MOBSUP, data = donnees_creps)
#summary(reg.mob_inf_stab_sup)
#reg.complet <- lm(donnees_creps$SCORE ~ MOBINF + MOBSUP + STABINF + STABSUP, data = donnees_creps)
#summary(reg.complet)
#stepAIC(reg.complet)
#anova(reg.mob_inf_stab_sup,reg.complet)
# pistes à creuser...
ggplot(data = donnees_creps) + geom_histogram(aes(x = MOBINF, fill = POLES), binwidth = 0.5) + scale_x_continuous(breaks=seq(0, 20, by = 1)) + xlab("Score") + ylab("Effectifs") + ggtitle("Effectifs selon les scores obtenus en mobilité inférieure selon les pôles")
ggplot(data = donnees_creps) + geom_histogram(aes(x = STABSUP, fill = POLES), binwidth = 0.5) + scale_x_continuous(breaks=seq(0, 20, by = 1)) + xlab("Score") + ylab("Effectifs") + ggtitle("Effectifs selon les scores obtenus en stabilité supérieure selon les pôles")
# Possible de redéfinir les seuils et les noms !
# Possible aussi de redéfinir le nom des facteurs !
SCORE_cat <- donnees_creps$SCORE
SCORE <- donnees_creps$SCORE
POLES <- donnees_creps$POLES
SCORE_cat[SCORE<5]<-"Tres faible"
SCORE_cat[SCORE<10 & SCORE>=5]<-"Faible"
SCORE_cat[SCORE<15 & SCORE>=10] <-"Moyen"
SCORE_cat[SCORE<=20 & SCORE>=15]<-"Bon"
SCORE_cat = factor(SCORE_cat, levels = c("Tres faible", "Faible", "Moyen", "Bon"))
# Table de contingence en fonction des facteurs définis
table.cat <- table(POLES, SCORE_cat)
addmargins(table.cat)
prop.cat <- prop.table(table.cat,1)
prop.cat
mosaicplot(table.cat,color=c("#FF3333","#FF9933", "#FFCC00","#66CC00"), main="Contingence Catégorie de score / Pôles", xlab = "Pôles", ylab = "Catégories de score")
donnees_bless= read_excel("Donnees_bless_Poles.xlsx")
donnees_bless$POLE=as.factor(donnees_bless$POLE)
par(mar=c(4,4,3,5))
plot(donnees_creps$SCORE ~donnees_creps$POLES, main="Comparaison entre les scores obtenus et le pourcentage de blessés dans chaque pôle", cex.main=0.75, ylab="", xlab="", axes = FALSE,col="blue")
axis(4, ylim=c(0,20),col="blue",col.axis="blue",at=seq(0, 20, by=2), cex.axis = 0.8)
mtext("Score global",side=4,line=2.5, col="blue")
#par(new=T)
plot(donnees_bless$BLESS_POURC ~donnees_bless$POLE, ylab="", xlab="", axes= FALSE, medcol = "red", boxcol = "red")
axis(2 , xlim=c(0,101), col="red",col.axis="red",at=seq(0, 101, by=10), cex.axis = 0.7)
mtext("Pourcentage de blessures",side=2,line=2.5, col = "red")
axis(1,at=c(1:8), labels=c("AV", "BF", "BK", "BL", "BS" ,"NAT", "NS", "R"), cex.axis = 0.8)
mtext("Pôles",side=1,line=2.5,col="black")
box()
# Manque les pourcentages de blessures pour les deux nouveaux pôles ! Savoir à quoi correspond l'état du sportif
# dans le nouvel excel
#a<- boxplot(donnees_creps$SCORE~donnees_creps$POLES)
#moda=gl(n=6, k=1, length=6, labels=c("AV", "BF", "BK", "BL", "NAT","NS" ))
#plot(a$stats[3,]~moda, main="Valeur médiane du nombre de blessés en fonction du pôle", ylab="médiane du nombre de blessures", xlab="Pôles")
#coord_x=a$stats[3,]
#coord_x=tab_median[c(1:4,6:7)]
coord_x=tab_median
coord_y=donnees_bless$BLESS_POURC
nom=c("BK","BL","BS","FB","R","RW","S","SS")
reg.med <- lm(coord_y ~ coord_x)
plot(coord_x,coord_y, ylab="Injured percentage", xlab="Median Score for each centre", main="Injured percentage VS median score for each centre", cex.main=0.7)
abline(reg.med, col = "red")
text(coord_x,coord_y,nom, pos=2, offset=0.5, cex=0.7)
#Plus pertinent avec les scores moyens de chaque pôle??
coord_x=tab_mean
coord_y=donnees_bless$BLESS_POURC
nom=c("BK","BL","BS","FB","R","RW","S","SS")
reg.moy <- lm(coord_y ~ coord_x)
plot(coord_x,coord_y,  ylab="Injured percentage", xlab="Average score for each centre", main="Injured percentage VS average score for each centre", cex.main=0.7)
abline(reg.moy, col = "red")
text(coord_x,coord_y,nom, pos=2, offset=0.5, cex=0.7)
# Ajustement des modèles :
summary(reg.med)
summary(reg.moy)
par(mfrow=c(2,2))
tab_median_mobinf=tapply(donnees_creps$MOBINF, donnees_creps$POLES, median)
coord_x=tab_median_mobinf
coord_y=donnees_bless$BLESS_POURC
nom=c("BK","BL","BS","FB","R","RW","S","SS")
plot(coord_x,coord_y, ylab="Injured Percentage", xlab="Average lower mobility score for each centre", main="Injured percentage depending on the average lower mobility score for each centre", cex.main=0.6)
text(coord_x,coord_y,nom, pos=2, offset=0.5, cex=0.7)
reg <- lm(coord_y ~ coord_x)
abline(reg, col = "red")
summary(reg)
tab_median_stabsup=tapply(donnees_creps$STABSUP, donnees_creps$POLES, median)
coord_x=tab_median_stabsup
coord_y=donnees_bless$BLESS_POURC
nom=c("BK","BL","BS","FB","R","RW","S","SS")
plot(coord_x,coord_y, ylab="Injured Percentage", xlab="Average upper stability score for each centre", main="Injured percentage depending on the average upper stability score for each centre", cex.main=0.6)
text(coord_x,coord_y,nom, pos=4, offset=0.5, cex=0.7)
reg <- lm(coord_y ~ coord_x)
abline(reg, col = "red")
summary(reg)
tab_median_mobsup=tapply(donnees_creps$MOBSUP, donnees_creps$POLES, median)
coord_x=tab_median_mobsup
coord_y=donnees_bless$BLESS_POURC
nom=c("BK","BL","BS","FB","R","RW","S","SS")
plot(coord_x,coord_y, ylab="Injured Percentage", xlab="Average upper mobility score for each centre", main="Injured percentage depending on the average upper mobility score for each centre", cex.main=0.6)
text(coord_x,coord_y,nom, pos=4, offset=0.5, cex=0.7)
reg <- lm(coord_y ~ coord_x)
abline(reg, col = "red")
summary(reg)
tab_median_stabinf=tapply(donnees_creps$STABINF, donnees_creps$POLES, median)
coord_x=tab_median_stabinf
coord_y=donnees_bless$BLESS_POURC
nom=c("BK","BL","BS","FB","R","RW","S","SS")
plot(coord_x,coord_y, ylab="Injured Percentage", xlab="Average lower stability score for each centre", main="Injured percentage depending on the average lower stability score for each centre", cex.main=0.6)
text(coord_x,coord_y,nom, pos=4, offset=0.5, cex=0.7)
reg <- lm(coord_y ~ coord_x)
abline(reg, col = "red")
summary(reg)
par(mfrow=c(2,2))
tab_mean_mobinf=tapply(donnees_creps$MOBINF, donnees_creps$POLES, mean)
coord_x=tab_mean_mobinf
coord_y=donnees_bless$BLESS_POURC
nom=c("RW","FB","BK","BL","BS", "S","SS","R")
plot(coord_x,coord_y, ylab="Pourcentage de blessés", xlab="Score moyen en mob inf obtenu dans chaque pôle", main="Pourcentage de blessés en fonction du score moyen obtenu pour chaque pôle", cex.main=0.6)
text(coord_x,coord_y,nom, pos=2, offset=0.5, cex=0.7)
reg <- lm(coord_y ~ coord_x)
abline(reg, col = "red")
summary(reg)
tab_mean_stabsup=tapply(donnees_creps$STABSUP, donnees_creps$POLES, mean)
coord_x=tab_mean_stabsup
coord_y=donnees_bless$BLESS_POURC
nom=c("RW","FB","BK","BL","BS", "S","SS","R")
plot(coord_x,coord_y, ylab="Pourcentage de blessés", xlab="Score moyen en stab sup obtenu dans chaque pôle", main="Pourcentage de blessés en fonction du score moyen obtenu pour chaque pôle", cex.main=0.6)
text(coord_x,coord_y,nom, pos=4, offset=0.5, cex=0.7)
reg <- lm(coord_y ~ coord_x)
abline(reg, col = "red")
summary(reg)
tab_mean_mobsup=tapply(donnees_creps$MOBSUP, donnees_creps$POLES, mean)
coord_x=tab_mean_mobsup
coord_y=donnees_bless$BLESS_POURC
nom=c("RW","FB","BK","BL","BS", "S","SS","R")
plot(coord_x,coord_y, ylab="Pourcentage de blessés", xlab="Score moyen en mob sup obtenu dans chaque pôle", main="Pourcentage de blessés en fonction du score moyen obtenu pour chaque pôle", cex.main=0.6)
text(coord_x,coord_y,nom, pos=4, offset=0.5, cex=0.7)
reg <- lm(coord_y ~ coord_x)
abline(reg, col = "red")
summary(reg)
tab_mean_stabinf=tapply(donnees_creps$STABINF, donnees_creps$POLES, mean)
coord_x=tab_mean_stabinf
coord_y=donnees_bless$BLESS_POURC
nom=c("RW","FB","BK","BL","BS", "S","SS","R")
plot(coord_x,coord_y, ylab="Pourcentage de blessés", xlab="Score moyen en stab inf obtenu dans chaque pôle", main="Pourcentage de blessés en fonction du score moyen obtenu pour chaque pôle", cex.main=0.6)
text(coord_x,coord_y,nom, pos=4, offset=0.5, cex=0.5)
reg <- lm(coord_y ~ coord_x)
abline(reg, col = "red")
summary(reg)
donnees_creps$Contact=donnees_creps$POLES=="BK"|donnees_creps$POLES=="FB"|donnees_creps$POLES=="R"
donnees_creps
AC<-(sum(donnees_creps$Contact)/count(donnees_creps))*100
SC<-(sum(donnees_creps$Contact==FALSE)/count(donnees_creps))*100
pie(table(donnees_creps$Contact),labels=c("Sans contact","Avec contacts"), main="Répartition des athlètes selon la nature du sport : avec/sans contact")
ggplot(data = donnees_creps) + geom_histogram(aes(x = SCORE, fill = Contact), binwidth = 0.5) + scale_x_continuous(breaks=seq(0, 20, by = 1)) + xlab("Score") + ylab("Effectifs") + ggtitle("Effectifs selon les scores obtenus (toutes catégories) selon l'absence ou non de contact") + theme(plot.title =element_text(,,,12))
boxplot(donnees_creps$SCORE ~ donnees_creps$Contact, cex.axis = 0.8, main = "Boxplots parallèles des scores en fonction de l'absence ou non de contact",
cex.main = 0.9,
ylim=c(0,20),
xlab = "Contact", ylab = "Score",
names=c("Non","Oui"))
par(mfrow=c(2,2))
boxplot(donnees_creps$MOBINF ~donnees_creps$Contact, ylab="Score en mobilite inf", xlab="Contact",names=c("Non","Oui"),main="Boxplots parallèles des scores en mob inf selon le contact",cex.main=0.7)
boxplot(donnees_creps$MOBSUP ~donnees_creps$Contact, ylab="Score en mobilite sup", xlab="Contact",names=c("Non","Oui"),main="Boxplots parallèles des scores en mob sup selon le contact",cex.main=0.7)
boxplot(donnees_creps$STABINF ~donnees_creps$Contact, ylab="Score en stabilité inf", xlab="Contact",names=c("Non","Oui"),main="Boxplots parallèles des scores en stab inf selon le contact",cex.main=0.7)
boxplot(donnees_creps$STABSUP ~donnees_creps$Contact,ylab="Score en stabilité sup", xlab="Contact",names=c("Non","Oui"),main="Boù xplots parallèles des scores en stab sup selon le contact",cex.main=0.7)
Contact=donnees_creps$Contact
tab_mean2 <- tapply(SCORE, Contact, mean) # moyenne des scores pour chaque pôle
tab_median2 <- tapply(SCORE, Contact, median) # médiane des scores pour chaque pôle
tab_mean2
tab_median2
donnees_creps$Contact=as.factor(donnees_creps$Contact)
ao.score.contact = lm(SCORE ~ Contact, data = donnees_creps)
summary(ao.score.contact)
#essai
ao.score_mob_inf.contact = lm(donnees_creps$MOBINF ~ Contact, data = donnees_creps)
summary(ao.score_mob_inf.contact)
donnees_bless$Contact=donnees_bless$POLE=="BK"|donnees_bless$POLE=="BF"|donnees_bless$POLE=="R"
donnees_bless$Contact=as.factor(donnees_bless$Contact)
donnees_creps$Contact=as.factor(donnees_creps$Contact)
plot(donnees_creps$SCORE ~donnees_creps$Contact, main="Score global en fonction du type de pôle", labels=c("Sans contact", "Avec contact"), ylab="Score global", xlab="Type de pôle")
plot(donnees_bless$BLESS_POURC ~donnees_bless$Contact, main="Pourcentage de blessures en fonction du type de pôle", labels=c("Sans contact", "Avec contact"), ylab="Pourcentage de blessures", xlab="Type de pôle")
par(mar=c(4,4,3,5))
plot(donnees_bless$BLESS_POURC ~donnees_bless$Contact, ylab="", xlab="", axes= FALSE, medcol = "red", boxcol = "red")
axis(2 , xlim=c(0,100), col="red",col.axis="red",at=seq(0, 101, by=10), cex.axis = 0.7)
mtext("Pourcentage de blessures",side=2,line=2.5, col = "red")
axis(1,at=c(1:2), labels=c("Sans contact", "Avec contact"), cex.axis = 0.8)
mtext("Types de Pôles",side=1,line=2.5,col="black")
#par(new=T)
plot(donnees_creps$SCORE ~donnees_creps$Contact, main="Comparaison entre les scores obtenus et le pourcentage de blessés dans chaque type de pôle", cex.main=0.75, ylab="", xlab="", axes = FALSE,col="blue")
axis(4, ylim=c(0,20),col="blue",col.axis="blue",at=seq(0, 20, by=2), cex.axis = 0.8)
mtext("Score global",side=4,line=2.5, col="blue")
box()
ao.score.contact = lm(BLESS_POURC ~ Contact, data = donnees_bless)
summary(ao.score.contact)
donnees_indispo <- read_excel("Donnees_Indispo.xlsx")
suppressWarnings({
donnees_indispo$IND=donnees_indispo$TOT_INDISPO
donnees_indispo$IND[donnees_indispo$TOT_INDISPO==0]="0"
donnees_indispo$IND[donnees_indispo$TOT_INDISPO>0 & donnees_indispo$TOT_INDISPO<=1]="Inf à 1"
donnees_indispo$IND[donnees_indispo$TOT_INDISPO>1& donnees_indispo$TOT_INDISPO<=3 ]="1 à 3"
donnees_indispo$IND[donnees_indispo$TOT_INDISPO>3]="Sup à 3"
donnees_indispo$IND = factor(donnees_indispo$IND, levels = c("Sup à 3", "1 à 3", "Inf à 1", "0"))
head(donnees_indispo)})
donnees_creps$SCORE_cat2 <- donnees_creps$SCORE
SCORE <- donnees_creps$SCORE
POLES <- donnees_creps$POLES
donnees_creps$SCORE_cat2[SCORE<6]<-"Faible"
donnees_creps$SCORE_cat2[SCORE<14 & SCORE>=6] <-"Moyen"
donnees_creps$SCORE_cat2[SCORE<=20 & SCORE>=14]<-"Bon"
donnees_creps$SCORE_cat2 = factor(donnees_creps$SCORE_cat2, levels = c("Faible", "Moyen", "Bon"))
#donnees_creps$SCORE_cat3 <- donnees_creps$SCORE
#donnees_creps$SCORE_cat3[SCORE<8]<-"Faible"
#donnees_creps$SCORE_cat3[SCORE<14 & SCORE>=8] <-"Moyen"
#donnees_creps$SCORE_cat3[SCORE<=20 & SCORE>=14]<-"Bon"
#donnees_creps$SCORE_cat3 = factor(donnees_creps$SCORE_cat3, levels = c("Faible", "Moyen", "Bon"))
donnees_creps$SCORE_cat3 <- donnees_creps$SCORE
donnees_creps$SCORE_cat3[SCORE<5]<-"Faible"
donnees_creps$SCORE_cat3[SCORE<10 & SCORE>=5] <-"Moyen"
donnees_creps$SCORE_cat3[SCORE<15 & SCORE>=10]<-"Bon"
donnees_creps$SCORE_cat3[SCORE<=20 & SCORE>=15]<-"Très Bon"
donnees_creps$SCORE_cat3 = factor(donnees_creps$SCORE_cat3, levels = c("Faible", "Moyen", "Bon", "Très Bon"))
table.IND <- table(donnees_indispo$POLE, donnees_indispo$IND)
addmargins(table.IND)
mosaicplot(table.IND,color=c("#FF3333","#FF9933", "#FFCC00","#66CC00"), main="Contingence Niv d'indispo / Pôles", xlab = "Pôles", ylab = "Catégories d'indispo")
table.cat2 <- table(donnees_creps$POLES, donnees_creps$SCORE_cat2)
addmargins(table.cat2)
mosaicplot(table.cat2,color=c("#FF3333","#FF9933","#66CC00"), main="Contingence Catégorie de score / Pôles", xlab = "Pôles", ylab = "Catégories de scores")
table.cat3 <- table(donnees_creps$POLES, donnees_creps$SCORE_cat3)
addmargins(table.cat3)
mosaicplot(table.cat3,color=c("#FF3333","#FF9933", "#FFCC00","#66CC00"), main="Contingence Catégorie de score / Pôles", xlab = "Pôles", ylab = "Catégories de scores")
suppressWarnings({
donnees_indispo$IND_BLESS=donnees_indispo$NB_BLESS
donnees_indispo$IND_BLESS[donnees_indispo$NB_BLESS==0]="0"
donnees_indispo$IND_BLESS[donnees_indispo$NB_BLESS>0 & donnees_indispo$NB_BLESS<=1]="1"
donnees_indispo$IND_BLESS[donnees_indispo$NB_BLESS>1& donnees_indispo$NB_BLESS<=3 ]="1 à 3"
donnees_indispo$IND_BLESS[donnees_indispo$NB_BLESS>3]="Sup à 3"
donnees_indispo$IND_BLESS = factor(donnees_indispo$IND_BLESS, levels = c("Sup à 3", "1 à 3", "1", "0"))
head(donnees_indispo)})
SCORE <- donnees_creps$SCORE
POLES <- donnees_creps$POLES
donnees_creps$SCORE_cat3 <- donnees_creps$SCORE
donnees_creps$SCORE_cat3[SCORE<5]<-"Low"
donnees_creps$SCORE_cat3[SCORE<=10 & SCORE>5] <-"Middling"
donnees_creps$SCORE_cat3[SCORE>10 & SCORE<15]<-"Good"
donnees_creps$SCORE_cat3[ SCORE>15]<-"Very Good"
donnees_creps$SCORE_cat3 = factor(donnees_creps$SCORE_cat3, levels = c("Low", "Middling", "Good"))
table.IND <- table(donnees_indispo$POLE, donnees_indispo$IND_BLESS)
addmargins(table.IND)
mosaicplot(table.IND,color=c("#FF3333", "#FFCC00","#66CC00"), main="Contingency table Unavailability categories/Poles", xlab = "Poles", ylab = "Unavailability categories")
table.cat3 <- table(donnees_creps$POLES, donnees_creps$SCORE_cat3)
addmargins(table.cat3)
mosaicplot(table.cat3,color=c("#FF3333", "#FFCC00","#66CC00"), main="Contingency table Score categories/Poles", xlab = "Poles", ylab = "Score categories")
SCORE <- donnees_creps$SCORE
POLES <- donnees_creps$POLES
suppressWarnings({
donnees_indispo$IND_BLESS=donnees_indispo$NB_BLESS
donnees_indispo$IND_BLESS[donnees_indispo$NB_BLESS>=0 & donnees_indispo$NB_BLESS<=1]="Low. th. 1"
donnees_indispo$IND_BLESS[donnees_indispo$NB_BLESS>1& donnees_indispo$NB_BLESS<3 ]="1 to 3"
donnees_indispo$IND_BLESS[donnees_indispo$NB_BLESS>=3]="Upp. th. 3"
donnees_indispo$IND_BLESS = factor(donnees_indispo$IND_BLESS, levels = c("Upp. th. 3", "1 to 3", "Low. th. 1"))
head(donnees_indispo)})
donnees_creps$SCORE_cat3 <- donnees_creps$SCORE
donnees_creps$SCORE_cat3[SCORE<7]<-"Low"
donnees_creps$SCORE_cat3[SCORE<10 & SCORE>=7] <-"Middling"
donnees_creps$SCORE_cat3[SCORE<=20 & SCORE>=10]<-"Good"
donnees_creps$SCORE_cat3 = factor(donnees_creps$SCORE_cat3, levels = c("Low", "Middling", "Good"))
par (mfrow=c(1,3))
table.IND <- table(donnees_indispo$POLE, donnees_indispo$IND_BLESS)
addmargins(table.IND)
mosaicplot(table.IND,color=c("#FF3333", "#FFCC00","#66CC00"), main="Contingency table Unavailability categories/Poles", xlab = "Poles", ylab = "Unavailability categories")
table.cat3 <- table(donnees_creps$POLES, donnees_creps$SCORE_cat3)
addmargins(table.cat3)
mosaicplot(table.cat3,color=c("#FF3333", "#FFCC00","#66CC00"), main="Contingency table Score categories/Poles", xlab = "Poles", ylab = "Score categories")
# Test graphes araignée superposés
## Récupération des données moyennes, minimales et maximales
POLE=donnees_indispo$POLE
#NB_BLESS = c(max(donnees_indispo$NB_BLESS),min(donnees_indispo$NB_BLESS),mean(donnees_indispo$NB_BLESS[POLES=="AV"]),mean(donnees_indispo$NB_BLESS[POLE=="BF"]),mean(donnees_indispo$NB_BLESS[POLE=="BK"]),mean(donnees_indispo$NB_BLESS[POLE=="BL"]),mean(donnees_indispo$NB_BLESS[POLE=="NAT"]),mean(donnees_indispo$NB_BLESS[POLE=="NS"]))
Indispo_1 = c(max(donnees_indispo$NB_INDISPO_1),min(donnees_indispo$NB_INDISPO_1),mean(donnees_indispo$NB_INDISPO_1[POLE=="RW"]),mean(donnees_indispo$NB_INDISPO_1[POLE=="FB"]),mean(donnees_indispo$NB_INDISPO_1[POLE=="BK"]),mean(donnees_indispo$NB_INDISPO_1[POLE=="BL"]), mean(donnees_indispo$NB_INDISPO_1[POLE=="BS"]),mean(donnees_indispo$NB_INDISPO_1[POLE=="S"]),mean(donnees_indispo$NB_INDISPO_1[POLE=="SS"]), mean(donnees_indispo$NB_INDISPO_1[POLE=="R"]))
Indispo_2 = c(max(donnees_indispo$NB_INDISPO_2),min(donnees_indispo$NB_INDISPO_2),mean(donnees_indispo$NB_INDISPO_2[POLE=="RW"]),mean(donnees_indispo$NB_INDISPO_2[POLE=="FB"]),mean(donnees_indispo$NB_INDISPO_2[POLE=="BK"]),mean(donnees_indispo$NB_INDISPO_2[POLE=="BL"]),mean(donnees_indispo$NB_INDISPO_2[POLE=="BS"]), mean(donnees_indispo$NB_INDISPO_2[POLE=="S"]),mean(donnees_indispo$NB_INDISPO_2[POLE=="SS"]),mean(donnees_indispo$NB_INDISPO_2[POLE=="R"]))
Indispo_3 = c(max(donnees_indispo$NB_INDISPO_3),min(donnees_indispo$NB_INDISPO_3),mean(donnees_indispo$NB_INDISPO_3[POLE=="RW"]),mean(donnees_indispo$NB_INDISPO_3[POLE=="FB"]),mean(donnees_indispo$NB_INDISPO_3[POLE=="BK"]),mean(donnees_indispo$NB_INDISPO_3[POLE=="BL"]),mean(donnees_indispo$NB_INDISPO_3[POLE=="BS"]),mean(donnees_indispo$NB_INDISPO_3[POLE=="S"]),mean(donnees_indispo$NB_INDISPO_3[POLE=="SS"]),mean(donnees_indispo$NB_INDISPO_3[POLE=="R"]))
#data_spider <- cbind(NB_BLESS,Indispo_1,Indispo_2,Indispo_3)
data_spider <- cbind(Indispo_1,Indispo_2,Indispo_3)
rownames(data_spider) <- c("MAX", "MIN", "RW", "FB", "BK", "BL", "BS", "S", "SS", "R")
#colnames(data_spider) <- c("NB_BLESS", "Indispo_1","Indispo_2", "Indispo_3")
colnames(data_spider) <- c("Indispo_1","Indispo_2", "Indispo_3")
data_spider = as.data.frame(data_spider)
## Définition et affichage du radarchart
par(mar = c(1, 1, 1, 1))
radarchart(data_spider,axistype = 1,pcol = c("lightskyblue2", "lightgoldenrod3", "mistyrose4", "lightcoral", "mediumblue", "lightseagreen"),plwd = 2, plty = 1,cglcol = "grey", cglty = 1, cglwd = 0.4,
axislabcol = "grey",vlcex = 0.7, vlabels = colnames(data_spider),caxislabels = NULL, title = " Unavailability category distribution per pole")
legend(x = "right", legend = rownames(data_spider[-c(1,2),]), horiz = FALSE,bty = "n", pch = 20 , col = c("lightskyblue2", "lightgoldenrod3", "mistyrose4", "lightcoral", "mediumblue", "lightseagreen"),text.col = "black", cex = 1, pt.cex = 1.5)
Moy_ind_1= c(mean(donnees_indispo$NB_INDISPO_1[POLE=="RW"]),mean(donnees_indispo$NB_INDISPO_1[POLE=="FB"]),mean(donnees_indispo$NB_INDISPO_1[POLE=="BK"]), mean(donnees_indispo$NB_INDISPO_1[POLE=="BL"]), mean(donnees_indispo$NB_INDISPO_1[POLE=="BS"]), mean(donnees_indispo$NB_INDISPO_1[POLE=="S"]), mean(donnees_indispo$NB_INDISPO_1[POLE=="SS"]), mean(donnees_indispo$NB_INDISPO_1[POLE=="R"]))
print(Moy_ind_1)
Moy_ind_2= c(mean(donnees_indispo$NB_INDISPO_2[POLE=="RW"]),mean(donnees_indispo$NB_INDISPO_2[POLE=="FB"]),mean(donnees_indispo$NB_INDISPO_2[POLE=="BK"]), mean(donnees_indispo$NB_INDISPO_2[POLE=="BL"]), mean(donnees_indispo$NB_INDISPO_2[POLE=="BS"]), mean(donnees_indispo$NB_INDISPO_2[POLE=="S"]), mean(donnees_indispo$NB_INDISPO_2[POLE=="SS"]), mean(donnees_indispo$NB_INDISPO_2[POLE=="R"]))
print(Moy_ind_2)
Moy_ind_3= c(mean(donnees_indispo$NB_INDISPO_3[POLE=="RW"]),mean(donnees_indispo$NB_INDISPO_3[POLE=="FB"]),mean(donnees_indispo$NB_INDISPO_3[POLE=="BK"]), mean(donnees_indispo$NB_INDISPO_3[POLE=="BL"]), mean(donnees_indispo$NB_INDISPO_3[POLE=="BS"]), mean(donnees_indispo$NB_INDISPO_3[POLE=="S"]), mean(donnees_indispo$NB_INDISPO_3[POLE=="SS"]), mean(donnees_indispo$NB_INDISPO_3[POLE=="R"]))
print(Moy_ind_3)
abscisse=c(Moy_ind_1, Moy_ind_2, Moy_ind_3)
abscisse
ordonnee_AV=c(mean(donnees_indispo$NB_INDISPO_1[POLE=="RW"]), mean(donnees_indispo$NB_INDISPO_2[POLE=="RW"]), mean(donnees_indispo$NB_INDISPO_2[POLE=="RW"]))
ordonnee_BF=c(mean(donnees_indispo$NB_INDISPO_1[POLE=="FB"]), mean(donnees_indispo$NB_INDISPO_2[POLE=="FB"]), mean(donnees_indispo$NB_INDISPO_2[POLE=="FB"]))
ordonnee_BK=c(mean(donnees_indispo$NB_INDISPO_1[POLE=="BK"]), mean(donnees_indispo$NB_INDISPO_2[POLE=="BK"]), mean(donnees_indispo$NB_INDISPO_2[POLE=="BK"]))
ordonnee_BL=c(mean(donnees_indispo$NB_INDISPO_1[POLE=="BL"]), mean(donnees_indispo$NB_INDISPO_2[POLE=="BL"]), mean(donnees_indispo$NB_INDISPO_2[POLE=="BL"]))
ordonnee_BS=c(mean(donnees_indispo$NB_INDISPO_1[POLE=="BS"]), mean(donnees_indispo$NB_INDISPO_2[POLE=="BS"]), mean(donnees_indispo$NB_INDISPO_2[POLE=="BS"]))
ordonnee_NAT=c(mean(donnees_indispo$NB_INDISPO_1[POLE=="S"]), mean(donnees_indispo$NB_INDISPO_2[POLE=="S"]), mean(donnees_indispo$NB_INDISPO_2[POLE=="S"]))
ordonnee_NS=c(mean(donnees_indispo$NB_INDISPO_1[POLE=="SS"]), mean(donnees_indispo$NB_INDISPO_2[POLE=="SS"]), mean(donnees_indispo$NB_INDISPO_2[POLE=="SS"]))
ordonnee_R=c(mean(donnees_indispo$NB_INDISPO_1[POLE=="R"]), mean(donnees_indispo$NB_INDISPO_2[POLE=="R"]), mean(donnees_indispo$NB_INDISPO_2[POLE=="R"]))
#plot(ordonnee_AV ~ seq(1:3), type="l", col="red")
#abline(ordonne_BF ~seq(1:3), type="l", col="orange")
x=matrix(data=c(1,2,3), nrow=3, ncol=1)
y=matrix(data=c(ordonnee_AV, ordonnee_BF, ordonnee_BK, ordonnee_BL, ordonnee_BS, ordonnee_NAT, ordonnee_NS, ordonnee_R), nrow = 3, ncol = 8)
#par(mar=c(5,5,2,2))
matplot(x,y,type="l", ylim=range(y), col=c("black","red", "green3","blue","cyan","magenta", "yellow","gray"), lty=1:3, xaxt="n", ylab="Mean of Injuries", xlab="Downtime category", main="Average number of injuries per downtime category, for each centre", cex.main=0.8)
legend('topright',legend = c("RW", "FB", "BK", "BL", "BS", "S", "SS", "R"), col = c("black","red", "green3","blue","cyan","magenta", "yellow","gray"), lty = 1:3, lwd = 1 )
xtick=seq(1,3, by=1)
axis(side=1, at=xtick, labels=c("Downtime 1", "Downtime 2", "Downtime 3"))
mean(donnees_indispo$NB_INDISPO_2[POLE=="BK"]+donnees_indispo$NB_INDISPO_1[POLE=="BK"]+donnees_indispo$NB_INDISPO_3[POLE=="BK"])
mean(donnees_indispo$NB_INDISPO_2[POLE=="FB"]+donnees_indispo$NB_INDISPO_1[POLE=="FB"]+donnees_indispo$NB_INDISPO_3[POLE=="FB"])
coord_x=tab_mean
coord_y=donnees_creps21$BLESS
reg.moy <- lm(coord_y ~ coord_x)
coord_x=donnees_creps21$INDIV
coord_y=donnees_creps21$BLESS
reg.moy <- lm(coord_y ~ coord_x)
plot(coord_x,coord_y,  ylab="Injured percentage", xlab="Average score for each centre", main="Injured percentage VS average score for each centre", cex.main=0.7)
coord_x=donnees_creps21$INDIV
coord_y=donnees_creps21$BLESS
reg.moy <- lm(coord_y ~ coord_x)
plot(coord_x,coord_y,  ylab="Injured percentage", xlab="Average score for each centre", main="Injured percentage VS average score for each centre", cex.main=0.7,xlim=4)
coord_x=donnees_creps21$INDIV
coord_y=donnees_creps21$BLESS
reg.moy <- lm(coord_y ~ coord_x)
plot(coord_x,coord_y,  ylab="Injured percentage", xlab="Average score for each centre", main="Injured percentage VS average score for each centre", cex.main=0.7,xlim=30)
coord_x=donnees_creps21$INDIV
coord_y=donnees_creps21$BLESS
reg.moy <- lm(coord_y ~ coord_x)
plot(coord_x,coord_y,  ylab="Injured percentage", xlab="Average score for each centre", main="Injured percentage VS average score for each centre", cex.main=0.7,xlim=1000)
coord_x=donnees_creps21$SCORE
coord_y=donnees_creps21$BLESS
reg.moy <- lm(coord_y ~ coord_x)
plot(coord_x,coord_y,  ylab="Injured percentage", xlab="Average score for each centre", main="Injured percentage VS average score for each centre", cex.main=0.7)
abline(reg.moy, col = "red")
text(coord_x,coord_y,nom, pos=2, offset=0.5, cex=0.7)
knitr::opts_chunk$set(echo = TRUE, cache=TRUE)
library(readxl)
library(ggplot2)
library(ggmosaic)
library(MASS)
library(dplyr)
library(fmsb)
library(corrplot)
# Importation du fichier de données depuis un .xlsx
donnees_creps21 <- read_excel("donnees_finales_2021.xlsx")
# Redéfinition de la variable qualitative à bon escient (en facteurs)
donnees_creps21$POLES <- as.factor(donnees_creps21$POLES)
# Vérification du contenu et présentation sommaire des variables
summary(donnees_creps21)
head(donnees_creps21)
pie(table(donnees_creps21$POLES), col = c("lightskyblue2", "lightgoldenrod3", "mistyrose4", "lightcoral", "mediumblue", "lightseagreen", "darkorange2", "brown4"),main = "Répartition des athlètes dans les pôles")
barplot(table(factor(donnees_creps21$SCORE, levels = 0:20)), main = "Scores obtenus - Tous pôles confondus", ylim = c(0,20), cex.names = 0.6, ylab = "Effectifs", xlab= "Score", col = heat.colors(20))
dim(donnees_creps21)
SCORE <- donnees_creps21$SCORE
POLES <- donnees_creps21$POLES
tab_mean <- tapply(SCORE, POLES, mean) # Moyenne des scores pour chaque pôle
tab_median <- tapply(SCORE, POLES, median) # Médiane des scores pour chaque pôle
tab_mean
tab_median
boxplot(donnees_creps21$SCORE ~ donnees_creps21$POLES, cex.axis = 0.8, main = "Boxplots parallèles des scores en fonction des pôles", xlab = "Pôles", ylab = "Score")
par(mfrow=c(1,2))
plot(donnees_creps21$SCORE_MOB ~donnees_creps21$POLES, ylab="Score en mobilité", xlab="Poles")
plot(donnees_creps21$SCORE_STAB ~donnees_creps21$POLES, ylab="Score en stabilité", xlab="Poles")
coord_x=donnees_creps21$SCORE
coord_y=donnees_creps21$BLESS
reg.moy <- lm(coord_y ~ coord_x)
plot(coord_x,coord_y,  ylab="Injured percentage", xlab="Average score for each centre", main="Injured percentage VS average score for each centre", cex.main=0.7)
abline(reg.moy, col = "red")
text(coord_x,coord_y,nom, pos=2, offset=0.5, cex=0.7)
coord_x=donnees_creps21$SCORE
coord_y=donnees_creps21$BLESS
reg.moy <- lm(coord_y ~ coord_x)
plot(coord_x,coord_y,  ylab="Injured percentage", xlab="Average score for each centre", main="Injured percentage VS average score for each centre", cex.main=0.7)
abline(reg.moy, col = "red")
text(coord_x,coord_y, pos=2, offset=0.5, cex=0.7)
coord_x=donnees_creps21$SCORE
coord_y=donnees_creps21$BLESS
reg.moy <- lm(coord_y ~ coord_x)
nom=donnees_creps21$INDIV
plot(coord_x,coord_y,  ylab="Injuries size", xlab="score", main="Injured percentage VS average score for each centre", cex.main=0.7)
abline(reg.moy, col = "red")
text(coord_x,coord_y,nom, pos=2, offset=0.5, cex=0.7)
#essai
coord_x=donnees_creps21$SCORE
coord_y=donnees_creps21$BLESS
reg.moy <- lm(coord_y ~ coord_x)
nom=donnees_creps21$INDIV #ou rien mettre et ça donne des numéros de 1 à 86 (plus propre) mais du coup on sait pas quel pôle...
plot(coord_x,coord_y,  ylab="Injuries size", xlab="Score", main="Injured percentage VS average score for each centre", cex.main=0.7)
abline(reg.moy, col = "red")
text(coord_x,coord_y,nom, pos=2, offset=0.5, cex=0.7)
